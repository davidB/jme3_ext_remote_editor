buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
		classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
	}
}

apply plugin: 'java'
apply plugin: 'provided-base'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = "0.1.0"
group = "net.alchim31.jme3"
def description = "An experimental remote display of a jMonkeyEngine application for remote edition (eg: via blender)"

repositories {
	mavenLocal()
	jcenter()
	maven { url "http://updates.jmonkeyengine.org/maven/"}
	maven { url "http://dl.bintray.com/jmonkeyengine/contrib" }
}

sourceSets.main.resources.srcDir 'src/main/java'

def v_slf4j = '1.7.7'
def v_jme3 = '3.0.10'

dependencies {
	provided 'org.projectlombok:lombok:1.14.2'
	provided "com.jme3:jme3-core:${v_jme3}"
	compile "org.slf4j:slf4j-api:${v_slf4j}"
	compile "org.slf4j:jul-to-slf4j:${v_slf4j}"
	compile 'io.netty:netty-handler:4.0.24.Final'
	compile 'net.alchim31.pgex:pgex:0+'
	runtime "com.jme3:jme3-desktop:${v_jme3}"
	runtime "com.jme3:jme3-lwjgl:${v_jme3}"
	testCompile 'junit:junit:4.12'
	testCompile 'net.alchim31.jme3:jme3_ext_spatial_explorer:0+'
	testCompile 'com.beust:jcommander:1.35'
	testCompile "com.jme3:jme3-blender:${v_jme3}"
	testRuntime 'ch.qos.logback:logback-classic:1.1.2'
}

//------------------------------------------------------------------------------
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

def pomConfig = {
	licenses {
		license {
			name "Public domain (CC0-1.0)"
			url "http://creativecommons.org/publicdomain/zero/1.0/"
			distribution "repo"
		}
	}
	developers {
		developer {
			id "davidB"
			name "David Bernard"
		}
	}
}

publishing {
	publications {
		mavenStuff(MavenPublication) {
			from components.java
			artifact sourcesJar
			pom.withXml {
				def root = asNode()
				if (description) root.appendNode('description', project.description)
				root.children().last() + pomConfig
			}
		}
	}
}

bintray {
	user = bintray_user
	key = bintray_api_key

	publications = ['mavenStuff'] //When uploading Maven-based publication files
	//dryRun = false //Whether to run this as dry-run, without deploying
	publish = true //If version should be auto published after an upload
	pkg {
		repo = 'jme3stuff'
		name = project.name
		desc = project.description
		websiteUrl = "https://github.com/davidB/${rootProject.name}"
		issueTrackerUrl = "https://github.com/davidB/${rootProject.name}/issues"
		vcsUrl = "https://github.com/davidB/${rootProject.name}.git"
		licenses = ['CC0-1.0']
		labels = ['jme3']
		publicDownloadNumbers = true
		version {
			name = project.version
			vcsTag = project.version
		}
	}
}

